@use "sass:meta";
@use "sass:math";
@use "sass:map";
@use "breakpoints" as *;
@use "tokens" as *;

@mixin mq($size) {
	@if map.has-key($breakpoints, $size) {
		$breakpoint: map.get($breakpoints, $size);
		@media screen and (min-width: $breakpoint) {
			@content;
		}
	} @else if meta.type-of($size) == number {
		@if math.is-unitless($size) {
			@error 'when using a number with @mq() make sure to include a unit';
		} @else {
			@media screen and (min-width: $size) {
				@content;
			}
		}
	} @else {
		@error 'the keyword #{$size} is not in the $breakpoints map';
	}
}

@mixin mq-max($size) {
	@if map.has-key($breakpoints, $size) {
		$breakpoint: map.get($breakpoints, $size);
		@media screen and (max-width: ($breakpoint - 1)) {
			@content;
		}
	} @else if meta.type-of($size) == number {
		@if math.is-unitless($size) {
			@error 'when using a number with @mq() make sure to include a unit';
		} @else {
			@media screen and (max-width: ($size - 1)) {
				@content;
			}
		}
	} @else {
		@error 'the keyword #{$size} is not in the $breakpoints map';
	}
}

@mixin grid($gap: $grid-gap, $flow: row, $rows: 1fr, $columns: 1fr) {
	display: grid;
	gap: var(--grid-gap, $gap);

	grid-auto-flow: $flow;
	grid-auto-rows: $rows;

	@include mq(large) {
		grid-auto-flow: column;
		grid-auto-columns: $columns;
	}

	@include mq(small) {
		grid-auto-flow: row;
		grid-auto-columns: $columns;
	}

	@include mq(medium) {
		grid-auto-flow: row;
		grid-auto-rows: $rows;
	}
}

@mixin heading($fs, $color: $heading-color-default) {
	font-size: $fs;
	color: $color;

	font-family: $heading-font-family;
	text-transform: $heading-text-transform;
	letter-spacing: $heading-letter-spacing;
	font-weight: $heading-font-weight;
	line-height: $heading-line-height;
}

@mixin body($fs, $color: $body-color-default) {
	font-size: $fs;
	color: $color;
	line-height: $body-line-height;
}

@mixin footer($fs: $footer-font-size, $color: $footer-color-default) {
	font-size: $fs;
	color: $color;
	line-height: $body-line-height;
}
